[
  {
    "Name": "TestPushLimitDownIndexLookUpReader",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select * from tbl use index(idx_b_c) where b > 1 limit 2,1",
        "Plan": [
          "IndexLookUp_14 1.00 root  limit embedded(offset:2, count:1)",
          "├─Limit_13(Build) 3.00 INTERLOCK[einsteindb]  offset:0, count:3",
          "│ └─IndexRangeScan_11 3.00 INTERLOCK[einsteindb] block:tbl, index:idx_b_c(b, c) range:(1,+inf], keep order:false",
          "└─BlockRowIDScan_12(Probe) 1.00 INTERLOCK[einsteindb] block:tbl keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from tbl use index(idx_b_c) where b > 1 order by b desc limit 2,1",
        "Plan": [
          "Projection_25 1.00 root  test.tbl.a, test.tbl.b, test.tbl.c",
          "└─IndexLookUp_24 1.00 root  limit embedded(offset:2, count:1)",
          "  ├─Limit_23(Build) 3.00 INTERLOCK[einsteindb]  offset:0, count:3",
          "  │ └─IndexRangeScan_21 3.00 INTERLOCK[einsteindb] block:tbl, index:idx_b_c(b, c) range:(1,+inf], keep order:true, desc",
          "  └─BlockRowIDScan_22(Probe) 1.00 INTERLOCK[einsteindb] block:tbl keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from tbl use index(idx_b_c) where b > 1 and c > 1 limit 2,1",
        "Plan": [
          "IndexLookUp_15 1.00 root  limit embedded(offset:2, count:1)",
          "├─Limit_14(Build) 3.00 INTERLOCK[einsteindb]  offset:0, count:3",
          "│ └─Selection_13 3.00 INTERLOCK[einsteindb]  gt(test.tbl.c, 1)",
          "│   └─IndexRangeScan_11 3.75 INTERLOCK[einsteindb] block:tbl, index:idx_b_c(b, c) range:(1,+inf], keep order:false",
          "└─BlockRowIDScan_12(Probe) 1.00 INTERLOCK[einsteindb] block:tbl keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from tbl use index(idx_b_c) where b > 1 and a > 1 limit 2,1",
        "Plan": [
          "Limit_9 1.00 root  offset:2, count:1",
          "└─IndexLookUp_15 3.00 root  ",
          "  ├─IndexRangeScan_11(Build) 3.75 INTERLOCK[einsteindb] block:tbl, index:idx_b_c(b, c) range:(1,+inf], keep order:false",
          "  └─Limit_14(Probe) 3.00 INTERLOCK[einsteindb]  offset:0, count:3",
          "    └─Selection_13 3.00 INTERLOCK[einsteindb]  gt(test.tbl.a, 1)",
          "      └─BlockRowIDScan_12 3.75 INTERLOCK[einsteindb] block:tbl keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestIsFromUnixtimeNullRejective",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select * from t t1 left join t t2 on t1.a=t2.a where from_unixtime(t2.b);",
        "Plan": [
          "HashJoin_7 9990.00 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─Selection_15(Build) 7992.00 root  from_unixtime(cast(test.t.b))",
          "│ └─BlockReader_14 7992.00 root  data:Selection_13",
          "│   └─Selection_13 7992.00 INTERLOCK[einsteindb]  not(isnull(test.t.a))",
          "│     └─BlockFullScan_12 10000.00 INTERLOCK[einsteindb] block:t2 keep order:false, stats:pseudo",
          "└─BlockReader_11(Probe) 9990.00 root  data:Selection_10",
          "  └─Selection_10 9990.00 INTERLOCK[einsteindb]  not(isnull(test.t.a))",
          "    └─BlockFullScan_9 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestSimplifyOuterJoinWithCast",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select * from t t1 left join t t2 on t1.a = t2.a where cast(t1.b as date) >= '2020-01-01'",
        "Plan": [
          "HashJoin_8 10000.00 root  left outer join, equal:[eq(test.t.a, test.t.a)]",
          "├─BlockReader_11(Build) 8000.00 root  data:Selection_10",
          "│ └─Selection_10 8000.00 INTERLOCK[einsteindb]  ge(cast(test.t.b), 2020-01-01 00:00:00.000000)",
          "│   └─BlockFullScan_9 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo",
          "└─BlockReader_13(Probe) 10000.00 root  data:BlockFullScan_12",
          "  └─BlockFullScan_12 10000.00 INTERLOCK[einsteindb] block:t2 keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMaxMinEliminate",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain (select max(a) from t) union (select min(a) from t)",
        "Plan": [
          "HashAgg_19 2.00 root  group by:DeferredCauset#5, funcs:firstrow(DeferredCauset#5)->DeferredCauset#5",
          "└─Union_20 2.00 root  ",
          "  ├─StreamAgg_26 1.00 root  funcs:max(test.t.a)->DeferredCauset#2",
          "  │ └─Limit_30 1.00 root  offset:0, count:1",
          "  │   └─BlockReader_40 1.00 root  data:Limit_39",
          "  │     └─Limit_39 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "  │       └─BlockFullScan_38 1.00 INTERLOCK[einsteindb] block:t keep order:true, desc, stats:pseudo",
          "  └─StreamAgg_48 1.00 root  funcs:min(test.t.a)->DeferredCauset#4",
          "    └─Limit_52 1.00 root  offset:0, count:1",
          "      └─BlockReader_62 1.00 root  data:Limit_61",
          "        └─Limit_61 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "          └─BlockFullScan_60 1.00 INTERLOCK[einsteindb] block:t keep order:true, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select min(a), max(a) from cluster_index_t",
        "Plan": [
          "HashJoin_16 1.00 root  CARTESIAN inner join",
          "├─StreamAgg_43(Build) 1.00 root  funcs:max(test.cluster_index_t.a)->DeferredCauset#5",
          "│ └─Limit_47 1.00 root  offset:0, count:1",
          "│   └─BlockReader_57 1.00 root  data:Limit_56",
          "│     └─Limit_56 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "│       └─BlockFullScan_55 1.00 INTERLOCK[einsteindb] block:cluster_index_t keep order:true, desc, stats:pseudo",
          "└─StreamAgg_22(Probe) 1.00 root  funcs:min(test.cluster_index_t.a)->DeferredCauset#4",
          "  └─Limit_26 1.00 root  offset:0, count:1",
          "    └─BlockReader_36 1.00 root  data:Limit_35",
          "      └─Limit_35 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "        └─BlockFullScan_34 1.00 INTERLOCK[einsteindb] block:cluster_index_t keep order:true, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select min(b), max(b) from cluster_index_t where a = 1",
        "Plan": [
          "HashJoin_19 1.00 root  CARTESIAN inner join",
          "├─StreamAgg_46(Build) 1.00 root  funcs:max(test.cluster_index_t.b)->DeferredCauset#5",
          "│ └─Limit_50 1.00 root  offset:0, count:1",
          "│   └─BlockReader_60 1.00 root  data:Limit_59",
          "│     └─Limit_59 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "│       └─BlockRangeScan_58 1.00 INTERLOCK[einsteindb] block:cluster_index_t range:[1,1], keep order:true, desc, stats:pseudo",
          "└─StreamAgg_25(Probe) 1.00 root  funcs:min(test.cluster_index_t.b)->DeferredCauset#4",
          "  └─Limit_29 1.00 root  offset:0, count:1",
          "    └─BlockReader_39 1.00 root  data:Limit_38",
          "      └─Limit_38 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "        └─BlockRangeScan_37 1.00 INTERLOCK[einsteindb] block:cluster_index_t range:[1,1], keep order:true, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select min(a), max(a) from cluster_index_t where b = 1",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:min(DeferredCauset#8)->DeferredCauset#4, funcs:max(DeferredCauset#9)->DeferredCauset#5",
          "└─BlockReader_21 1.00 root  data:StreamAgg_9",
          "  └─StreamAgg_9 1.00 INTERLOCK[einsteindb]  funcs:min(test.cluster_index_t.a)->DeferredCauset#8, funcs:max(test.cluster_index_t.a)->DeferredCauset#9",
          "    └─Selection_19 10.00 INTERLOCK[einsteindb]  eq(test.cluster_index_t.b, 1)",
          "      └─BlockFullScan_18 10000.00 INTERLOCK[einsteindb] block:cluster_index_t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select min(b), max(b) from cluster_index_t where b = 1",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:min(DeferredCauset#8)->DeferredCauset#4, funcs:max(DeferredCauset#9)->DeferredCauset#5",
          "└─BlockReader_21 1.00 root  data:StreamAgg_9",
          "  └─StreamAgg_9 1.00 INTERLOCK[einsteindb]  funcs:min(test.cluster_index_t.b)->DeferredCauset#8, funcs:max(test.cluster_index_t.b)->DeferredCauset#9",
          "    └─Selection_19 10.00 INTERLOCK[einsteindb]  eq(test.cluster_index_t.b, 1)",
          "      └─BlockFullScan_18 10000.00 INTERLOCK[einsteindb] block:cluster_index_t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIndexJoinUniqueCompositeIndex",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select /*+ MilevaDB_INLJ(t2) */ * from t1 join t2 on t1.a = t2.a and t1.c = t2.c",
        "Plan": [
          "IndexJoin_9 2.00 root  inner join, inner:IndexLookUp_8, outer key:test.t1.a, inner key:test.t2.a, other cond:eq(test.t1.c, test.t2.c)",
          "├─BlockReader_19(Build) 1.00 root  data:BlockFullScan_18",
          "│ └─BlockFullScan_18 1.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─IndexLookUp_8(Probe) 2.00 root  ",
          "  ├─IndexRangeScan_6(Build) 2.00 INTERLOCK[einsteindb] block:t2, index:PRIMARY(a, b) range: decided by [eq(test.t2.a, test.t1.a)], keep order:false",
          "  └─BlockRowIDScan_7(Probe) 2.00 INTERLOCK[einsteindb] block:t2 keep order:false"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select /*+ MilevaDB_INLJ(t2) */ * from t1 join t2 on t1.a = t2.a and t1.c <= t2.b",
        "Plan": [
          "IndexJoin_9 2.00 root  inner join, inner:IndexLookUp_8, outer key:test.t1.a, inner key:test.t2.a, other cond:le(test.t1.c, test.t2.b)",
          "├─BlockReader_19(Build) 1.00 root  data:BlockFullScan_18",
          "│ └─BlockFullScan_18 1.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─IndexLookUp_8(Probe) 2.00 root  ",
          "  ├─IndexRangeScan_6(Build) 2.00 INTERLOCK[einsteindb] block:t2, index:PRIMARY(a, b) range: decided by [eq(test.t2.a, test.t1.a) le(test.t1.c, test.t2.b)], keep order:false",
          "  └─BlockRowIDScan_7(Probe) 2.00 INTERLOCK[einsteindb] block:t2 keep order:false"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select /*+ MilevaDB_INLJ(t2) */ * from t1 join t2 on t1.a = t2.a and t2.b = 1",
        "Plan": [
          "IndexJoin_9 1.00 root  inner join, inner:IndexLookUp_8, outer key:test.t1.a, inner key:test.t2.a",
          "├─BlockReader_19(Build) 1.00 root  data:BlockFullScan_18",
          "│ └─BlockFullScan_18 1.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─IndexLookUp_8(Probe) 1.00 root  ",
          "  ├─IndexRangeScan_6(Build) 1.00 INTERLOCK[einsteindb] block:t2, index:PRIMARY(a, b) range: decided by [eq(test.t2.a, test.t1.a) eq(test.t2.b, 1)], keep order:false",
          "  └─BlockRowIDScan_7(Probe) 1.00 INTERLOCK[einsteindb] block:t2 keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestPartitionBlockStats",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select * from t order by a",
        "Result": [
          "Sort_8 10005.00 root  test.t.a",
          "└─PartitionUnion_11 10005.00 root  ",
          "  ├─BlockReader_13 10000.00 root  data:BlockFullScan_12",
          "  │ └─BlockFullScan_12 10000.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "  ├─BlockReader_15 1.00 root  data:BlockFullScan_14",
          "  │ └─BlockFullScan_14 1.00 INTERLOCK[einsteindb] block:t, partition:p1 keep order:false",
          "  └─BlockReader_17 4.00 root  data:BlockFullScan_16",
          "    └─BlockFullScan_16 4.00 INTERLOCK[einsteindb] block:t, partition:p2 keep order:false"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t order by a",
        "Result": [
          "15 5",
          "21 1",
          "22 2",
          "23 3",
          "24 4"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t order by a limit 3",
        "Result": [
          "TopN_16 3.00 root  test.t.a, offset:0, count:3",
          "└─PartitionUnion_20 7.00 root  ",
          "  ├─TopN_21 3.00 root  test.t.a, offset:0, count:3",
          "  │ └─BlockReader_29 3.00 root  data:TopN_28",
          "  │   └─TopN_28 3.00 INTERLOCK[einsteindb]  test.t.a, offset:0, count:3",
          "  │     └─BlockFullScan_27 10000.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "  ├─TopN_34 1.00 root  test.t.a, offset:0, count:3",
          "  │ └─BlockReader_42 1.00 root  data:BlockFullScan_41",
          "  │   └─BlockFullScan_41 1.00 INTERLOCK[einsteindb] block:t, partition:p1 keep order:false",
          "  └─TopN_43 3.00 root  test.t.a, offset:0, count:3",
          "    └─BlockReader_51 3.00 root  data:TopN_50",
          "      └─TopN_50 3.00 INTERLOCK[einsteindb]  test.t.a, offset:0, count:3",
          "        └─BlockFullScan_49 4.00 INTERLOCK[einsteindb] block:t, partition:p2 keep order:false"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t order by a limit 3",
        "Result": [
          "15 5",
          "21 1",
          "22 2"
        ]
      }
    ]
  },
  {
    "Name": "TestIndexMerge",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select /*+ USE_INDEX_MERGE(t, a, b) */ * from t where a = 1 or b = 2",
        "Plan": [
          "IndexMerge_8 2.00 root  ",
          "├─IndexRangeScan_5(Build) 1.00 INTERLOCK[einsteindb] block:t, index:a(a) range:[1,1], keep order:false, stats:pseudo",
          "├─IndexRangeScan_6(Build) 1.00 INTERLOCK[einsteindb] block:t, index:b(b) range:[2,2], keep order:false, stats:pseudo",
          "└─BlockRowIDScan_7(Probe) 2.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select /*+ USE_INDEX_MERGE(t, primary) */ * from t where 1 or t.c",
        "Plan": [
          "IndexMerge_8 10000.00 root  ",
          "├─BlockFullScan_5(Build) 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo",
          "├─BlockRangeScan_6(Build) 6666.67 INTERLOCK[einsteindb] block:t range:[-inf,0), (0,+inf], keep order:false, stats:pseudo",
          "└─BlockRowIDScan_7(Probe) 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select /*+ USE_INDEX_MERGE(t, a, b, c) */ * from t where 1 or t.a = 1 or t.b = 2",
        "Plan": [
          "BlockReader_7 8000.40 root  data:Selection_6",
          "└─Selection_6 8000.40 INTERLOCK[einsteindb]  or(or(1, eq(test.t.a, 1)), eq(test.t.b, 2))",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestSubqueryWithTopN",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "desc select t1.b from t t1 where t1.b in (select t2.a from t t2 order by t1.a+t2.a limit 1)",
        "Plan": [
          "Projection_11 9990.00 root  test.t.b",
          "└─Apply_13 9990.00 root  semi join, equal:[eq(test.t.b, test.t.a)]",
          "  ├─BlockReader_16(Build) 9990.00 root  data:Selection_15",
          "  │ └─Selection_15 9990.00 INTERLOCK[einsteindb]  not(isnull(test.t.b))",
          "  │   └─BlockFullScan_14 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo",
          "  └─Selection_17(Probe) 0.80 root  not(isnull(test.t.a))",
          "    └─Projection_26 1.00 root  test.t.a",
          "      └─TopN_18 1.00 root  DeferredCauset#7, offset:0, count:1",
          "        └─Projection_27 1.00 root  test.t.a, plus(test.t.a, test.t.a)->DeferredCauset#7",
          "          └─BlockReader_23 1.00 root  data:TopN_22",
          "            └─TopN_22 1.00 INTERLOCK[einsteindb]  plus(test.t.a, test.t.a), offset:0, count:1",
          "              └─BlockFullScan_21 10000.00 INTERLOCK[einsteindb] block:t2 keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIndexJoinBlockRange",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "desc select /*+ MilevaDB_INLJ(t2)*/ * from t1, t2 where t1.a = t2.a and t1.b = t2.b",
        "Plan": [
          "IndexJoin_15 12487.50 root  inner join, inner:BlockReader_11, outer key:test.t1.a, inner key:test.t2.a, other cond:eq(test.t1.b, test.t2.b)",
          "├─IndexReader_21(Build) 9990.00 root  index:IndexFullScan_20",
          "│ └─IndexFullScan_20 9990.00 INTERLOCK[einsteindb] block:t1, index:idx_t1_b(b) keep order:false, stats:pseudo",
          "└─BlockReader_11(Probe) 1.00 root  data:Selection_10",
          "  └─Selection_10 1.00 INTERLOCK[einsteindb]  not(isnull(test.t2.b))",
          "    └─BlockRangeScan_9 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t1.a], keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "desc select /*+ MilevaDB_INLJ(t2)*/ * from t1, t2 where t1.a = t2.a and t1.b = t2.a and t1.b = t2.b",
        "Plan": [
          "IndexJoin_15 12487.50 root  inner join, inner:BlockReader_11, outer key:test.t1.a, test.t1.b, inner key:test.t2.a, test.t2.a, other cond:eq(test.t1.b, test.t2.b)",
          "├─IndexReader_20(Build) 9990.00 root  index:IndexFullScan_19",
          "│ └─IndexFullScan_19 9990.00 INTERLOCK[einsteindb] block:t1, index:idx_t1_b(b) keep order:false, stats:pseudo",
          "└─BlockReader_11(Probe) 1.00 root  data:Selection_10",
          "  └─Selection_10 1.00 INTERLOCK[einsteindb]  not(isnull(test.t2.b))",
          "    └─BlockRangeScan_9 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t1.a test.t1.b], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestHintWithRequiredProperty",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "desc select /*+ INL_JOIN(t2) */ * from t t1, t t2 where t1.a = t2.b order by t2.a",
        "Plan": [
          "Sort_7 12487.50 root  test.t.a",
          "└─IndexJoin_15 12487.50 root  inner join, inner:IndexLookUp_14, outer key:test.t.a, inner key:test.t.b",
          "  ├─BlockReader_25(Build) 10000.00 root  data:BlockFullScan_24",
          "  │ └─BlockFullScan_24 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo",
          "  └─IndexLookUp_14(Probe) 1.25 root  ",
          "    ├─Selection_13(Build) 1.25 INTERLOCK[einsteindb]  not(isnull(test.t.b))",
          "    │ └─IndexRangeScan_11 1.25 INTERLOCK[einsteindb] block:t2, index:b(b) range: decided by [eq(test.t.b, test.t.a)], keep order:false, stats:pseudo",
          "    └─BlockRowIDScan_12(Probe) 1.25 INTERLOCK[einsteindb] block:t2 keep order:false, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "ALLEGROALLEGROSQL": "desc select /*+ INL_HASH_JOIN(t2) */ * from t t1, t t2 where t1.a = t2.b order by t2.a",
        "Plan": [
          "Sort_7 12487.50 root  test.t.a",
          "└─IndexHashJoin_17 12487.50 root  inner join, inner:IndexLookUp_14, outer key:test.t.a, inner key:test.t.b",
          "  ├─BlockReader_25(Build) 10000.00 root  data:BlockFullScan_24",
          "  │ └─BlockFullScan_24 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo",
          "  └─IndexLookUp_14(Probe) 1.25 root  ",
          "    ├─Selection_13(Build) 1.25 INTERLOCK[einsteindb]  not(isnull(test.t.b))",
          "    │ └─IndexRangeScan_11 1.25 INTERLOCK[einsteindb] block:t2, index:b(b) range: decided by [eq(test.t.b, test.t.a)], keep order:false, stats:pseudo",
          "    └─BlockRowIDScan_12(Probe) 1.25 INTERLOCK[einsteindb] block:t2 keep order:false, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "ALLEGROALLEGROSQL": "desc select /*+ INL_MERGE_JOIN(t2)*/ t1.a, t2.a from t t1, t t2 ,t t3 where t1.a = t2.a and t3.a=t2.a",
        "Plan": [
          "HashJoin_21 15625.00 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─BlockReader_60(Build) 10000.00 root  data:BlockFullScan_59",
          "│ └─BlockFullScan_59 10000.00 INTERLOCK[einsteindb] block:t3 keep order:false, stats:pseudo",
          "└─IndexMergeJoin_58(Probe) 12500.00 root  inner join, inner:BlockReader_53, outer key:test.t.a, inner key:test.t.a",
          "  ├─BlockReader_45(Build) 10000.00 root  data:BlockFullScan_44",
          "  │ └─BlockFullScan_44 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo",
          "  └─BlockReader_53(Probe) 1.00 root  data:BlockRangeScan_52",
          "    └─BlockRangeScan_52 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t.a], keep order:true, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "ALLEGROALLEGROSQL": "desc select * from t t1, (select /*+ HASH_AGG() */ b, max(a) from t t2 group by b) t2 where t1.b = t2.b order by t1.b",
        "Plan": [
          "Sort_10 9990.00 root  test.t.b",
          "└─Projection_12 9990.00 root  test.t.a, test.t.b, test.t.c, test.t.b, DeferredCauset#7",
          "  └─HashJoin_27 9990.00 root  inner join, equal:[eq(test.t.b, test.t.b)]",
          "    ├─HashAgg_47(Build) 7992.00 root  group by:test.t.b, funcs:max(DeferredCauset#10)->DeferredCauset#7, funcs:firstrow(test.t.b)->test.t.b",
          "    │ └─IndexReader_48 7992.00 root  index:HashAgg_44",
          "    │   └─HashAgg_44 7992.00 INTERLOCK[einsteindb]  group by:test.t.b, funcs:max(test.t.a)->DeferredCauset#10",
          "    │     └─IndexFullScan_37 9990.00 INTERLOCK[einsteindb] block:t2, index:b(b) keep order:false, stats:pseudo",
          "    └─BlockReader_51(Probe) 9990.00 root  data:Selection_50",
          "      └─Selection_50 9990.00 INTERLOCK[einsteindb]  not(isnull(test.t.b))",
          "        └─BlockFullScan_49 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "ALLEGROALLEGROSQL": "desc select /*+ INL_HASH_JOIN(t2) */ distinct t2.a from t t1 join t t2 on t1.a = t2.a",
        "Plan": [
          "IndexHashJoin_15 12500.00 root  inner join, inner:BlockReader_10, outer key:test.t.a, inner key:test.t.a",
          "├─BlockReader_19(Build) 10000.00 root  data:BlockFullScan_18",
          "│ └─BlockFullScan_18 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo",
          "└─BlockReader_10(Probe) 1.00 root  data:BlockRangeScan_9",
          "  └─BlockRangeScan_9 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t.a], keep order:false, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "ALLEGROALLEGROSQL": "desc select /*+ INL_JOIN(t2) */ * from t t1, t t2 where t1.a = t2.c order by t1.a",
        "Plan": [
          "Sort_7 12487.50 root  test.t.a",
          "└─HashJoin_19 12487.50 root  inner join, equal:[eq(test.t.a, test.t.c)]",
          "  ├─BlockReader_23(Build) 9990.00 root  data:Selection_22",
          "  │ └─Selection_22 9990.00 INTERLOCK[einsteindb]  not(isnull(test.t.c))",
          "  │   └─BlockFullScan_21 10000.00 INTERLOCK[einsteindb] block:t2 keep order:false, stats:pseudo",
          "  └─BlockReader_25(Probe) 10000.00 root  data:BlockFullScan_24",
          "    └─BlockFullScan_24 10000.00 INTERLOCK[einsteindb] block:t1 keep order:false, stats:pseudo"
        ],
        "Warnings": [
          "[planner:1815]Optimizer Hint /*+ INL_JOIN(t2) */ or /*+ MilevaDB_INLJ(t2) */ is inapplicable",
          "[planner:1815]Optimizer Hint /*+ INL_JOIN(t2) */ or /*+ MilevaDB_INLJ(t2) */ is inapplicable"
        ]
      }
    ]
  },
  {
    "Name": "TestIndexHintWarning",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX(t1, j) */ * from t1",
        "Warnings": [
          "[planner:1176]Key 'j' doesn't exist in block 't1'"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ IGNORE_INDEX(t1, j) */ * from t1",
        "Warnings": [
          "[planner:1176]Key 'j' doesn't exist in block 't1'"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX(t2, a, b, c) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index(test.t2, a, b, c) is inapplicable, check whether the block(test.t2) exists"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX(t2) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index(test.t2) is inapplicable, check whether the block(test.t2) exists"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX(t1, a), USE_INDEX(t2, a), USE_INDEX(t3, a) */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]use_index(test.t3, a) is inapplicable, check whether the block(test.t3) exists"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX(t3, a), USE_INDEX(t4, b), IGNORE_INDEX(t3, a) */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]use_index(test.t3, a) is inapplicable, check whether the block(test.t3) exists",
          "[planner:1815]use_index(test.t4, b) is inapplicable, check whether the block(test.t4) exists",
          "[planner:1815]ignore_index(test.t3, a) is inapplicable, check whether the block(test.t3) exists"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX_MERGE(t3, a, b, d) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index_merge(test.t3, a, b, d) is inapplicable, check whether the block(test.t3) exists"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX_MERGE(t1, a, b, c, d) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index_merge(test.t1, a, b, c, d) is inapplicable, check whether the indexes (c, d) exist, or the indexes are conflicted with use_index/ignore_index hints."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX_MERGE(t1, a, b), USE_INDEX(t1, a) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index_merge(test.t1, a, b) is inapplicable, check whether the indexes (b) exist, or the indexes are conflicted with use_index/ignore_index hints."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX_MERGE(t1, a, b), IGNORE_INDEX(t1, a) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index_merge(test.t1, a, b) is inapplicable, check whether the indexes (a) exist, or the indexes are conflicted with use_index/ignore_index hints."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX_MERGE(t1, primary, a, b, c) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index_merge(test.t1, primary, a, b, c) is inapplicable, check whether the indexes (c) exist, or the indexes are conflicted with use_index/ignore_index hints."
        ]
      }
    ]
  },
  {
    "Name": "TestHintWithoutBlockWarning",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select /*+ MilevaDB_SMJ() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint MilevaDB_SMJ() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ MERGE_JOIN() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint MERGE_JOIN() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ INL_JOIN() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint INL_JOIN() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ MilevaDB_INLJ() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint MilevaDB_INLJ() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ INL_HASH_JOIN() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint INL_HASH_JOIN() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ INL_MERGE_JOIN() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint INL_MERGE_JOIN() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ HASH_JOIN() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]Hint HASH_JOIN() is inapplicable. Please specify the block names in the arguments."
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[berolinaAllegroSQL:1064]You have an error in your ALLEGROALLEGROSQL syntax; check the manual that corresponds to your MilevaDB version for the right syntax to use [berolinaAllegroSQL:8064]Optimizer hint syntax error at line 1 column 22 near \") */\" "
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ IGNORE_INDEX() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[berolinaAllegroSQL:1064]You have an error in your ALLEGROALLEGROSQL syntax; check the manual that corresponds to your MilevaDB version for the right syntax to use [berolinaAllegroSQL:8064]Optimizer hint syntax error at line 1 column 25 near \") */\" "
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ USE_INDEX_MERGE() */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[berolinaAllegroSQL:1064]You have an error in your ALLEGROALLEGROSQL syntax; check the manual that corresponds to your MilevaDB version for the right syntax to use [berolinaAllegroSQL:8064]Optimizer hint syntax error at line 1 column 28 near \") */\" "
        ]
      }
    ]
  },
  {
    "Name": "TestPartitionPruningForInExpr",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "explain select * from t where a in (1, 2,'11')",
        "Plan": [
          "BlockReader_7 30.00 root partition:p0,p2 data:Selection_6",
          "└─Selection_6 30.00 INTERLOCK[einsteindb]  in(test.t.a, 1, 2, 11)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t where a in (17, null)",
        "Plan": [
          "BlockReader_7 10.00 root partition:p0,p2 data:Selection_6",
          "└─Selection_6 10.00 INTERLOCK[einsteindb]  in(test.t.a, 17, NULL)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t where a in (16, 'abc')",
        "Plan": [
          "BlockReader_7 20.00 root partition:p0,p2 data:Selection_6",
          "└─Selection_6 20.00 INTERLOCK[einsteindb]  in(test.t.a, 16, 0)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t where a in (15, 0.12, 3.47)",
        "Plan": [
          "BlockReader_7 10.00 root partition:p2 data:Selection_6",
          "└─Selection_6 10.00 INTERLOCK[einsteindb]  or(eq(test.t.a, 15), 0)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t where a in (0.12, 3.47)",
        "Plan": [
          "BlockDual_6 0.00 root  rows:0"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t where a in (14, floor(3.47))",
        "Plan": [
          "BlockReader_7 20.00 root partition:p0,p2 data:Selection_6",
          "└─Selection_6 20.00 INTERLOCK[einsteindb]  in(test.t.a, 14, 3)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "explain select * from t where b in (3, 4)",
        "Plan": [
          "BlockReader_7 20.00 root partition:all data:Selection_6",
          "└─Selection_6 20.00 INTERLOCK[einsteindb]  in(test.t.b, 3, 4)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestStreamAggProp",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select /*+ stream_agg() */ count(*) c from t group by a order by c limit 1",
        "Plan": [
          "TopN_10 1.00 root  DeferredCauset#3, offset:0, count:1",
          "└─StreamAgg_17 8000.00 root  group by:test.t.a, funcs:count(1)->DeferredCauset#3",
          "  └─Sort_22 10000.00 root  test.t.a",
          "    └─BlockReader_21 10000.00 root  data:BlockFullScan_20",
          "      └─BlockFullScan_20 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ stream_agg() */ count(*) c from t group by a order by c",
        "Plan": [
          "Sort_5 8000.00 root  DeferredCauset#3",
          "└─StreamAgg_11 8000.00 root  group by:test.t.a, funcs:count(1)->DeferredCauset#3",
          "  └─Sort_16 10000.00 root  test.t.a",
          "    └─BlockReader_15 10000.00 root  data:BlockFullScan_14",
          "      └─BlockFullScan_14 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "2"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ stream_agg() */ count(*) c from t group by a order by a limit 1",
        "Plan": [
          "Projection_8 1.00 root  DeferredCauset#3",
          "└─Limit_14 1.00 root  offset:0, count:1",
          "  └─StreamAgg_27 1.00 root  group by:test.t.a, funcs:count(1)->DeferredCauset#3, funcs:firstrow(test.t.a)->test.t.a",
          "    └─Sort_32 1.25 root  test.t.a",
          "      └─BlockReader_31 1.25 root  data:BlockFullScan_30",
          "        └─BlockFullScan_30 1.25 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "2"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ stream_agg() */ count(*) c from t group by a order by a",
        "Plan": [
          "Projection_6 8000.00 root  DeferredCauset#3",
          "└─StreamAgg_21 8000.00 root  group by:test.t.a, funcs:count(1)->DeferredCauset#3, funcs:firstrow(test.t.a)->test.t.a",
          "  └─Sort_17 10000.00 root  test.t.a",
          "    └─BlockReader_16 10000.00 root  data:BlockFullScan_15",
          "      └─BlockFullScan_15 10000.00 INTERLOCK[einsteindb] block:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "2",
          "1"
        ]
      }
    ]
  },
  {
    "Name": "TestOptimizeHintOnPartitionBlock",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(t) */ * from t",
        "Plan": [
          "PartitionUnion_8 30000.00 root  ",
          "├─BlockReader_10 10000.00 root  data:BlockFullScan_9",
          "│ └─BlockFullScan_9 10000.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "├─BlockReader_12 10000.00 root  data:BlockFullScan_11",
          "│ └─BlockFullScan_11 10000.00 INTERLOCK[einsteindb] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_14 10000.00 root  data:BlockFullScan_13",
          "  └─BlockFullScan_13 10000.00 INTERLOCK[einsteindb] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(t partition(p0, p1) b, c) */ * from t partition(p1,p2)",
        "Plan": [
          "PartitionUnion_7 20000.00 root  ",
          "├─IndexLookUp_10 10000.00 root  ",
          "│ ├─IndexFullScan_8(Build) 10000.00 INTERLOCK[einsteindb] block:t, partition:p1, index:b(b) keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_9(Probe) 10000.00 INTERLOCK[einsteindb] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_17 10000.00 root  data:BlockFullScan_16",
          "  └─BlockFullScan_16 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": [
          "Warning 1105 Unknown partitions (p0) in optimizer hint /*+ USE_INDEX(t PARTITION(p0, p1) b, c) */"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(t partition(p_non_exist)) */ * from t partition(p1,p2)",
        "Plan": [
          "PartitionUnion_7 20000.00 root  ",
          "├─BlockReader_11 10000.00 root  data:BlockFullScan_10",
          "│ └─BlockFullScan_10 10000.00 INTERLOCK[tiflash] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_15 10000.00 root  data:BlockFullScan_14",
          "  └─BlockFullScan_14 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": [
          "Warning 1105 Unknown partitions (p_non_exist) in optimizer hint /*+ USE_INDEX(t PARTITION(p_non_exist)) */"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(t partition(p0, p1) b, c) */ * from t",
        "Plan": [
          "PartitionUnion_8 30000.00 root  ",
          "├─IndexLookUp_11 10000.00 root  ",
          "│ ├─IndexFullScan_9(Build) 10000.00 INTERLOCK[einsteindb] block:t, partition:p0, index:b(b) keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_10(Probe) 10000.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "├─IndexLookUp_17 10000.00 root  ",
          "│ ├─IndexFullScan_15(Build) 10000.00 INTERLOCK[einsteindb] block:t, partition:p1, index:b(b) keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_16(Probe) 10000.00 INTERLOCK[einsteindb] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_24 10000.00 root  data:BlockFullScan_23",
          "  └─BlockFullScan_23 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ ignore_index(t partition(p0, p1) b, c) */ * from t",
        "Plan": [
          "PartitionUnion_8 30000.00 root  ",
          "├─BlockReader_12 10000.00 root  data:BlockFullScan_11",
          "│ └─BlockFullScan_11 10000.00 INTERLOCK[tiflash] block:t, partition:p0 keep order:false, stats:pseudo",
          "├─BlockReader_16 10000.00 root  data:BlockFullScan_15",
          "│ └─BlockFullScan_15 10000.00 INTERLOCK[tiflash] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_20 10000.00 root  data:BlockFullScan_19",
          "  └─BlockFullScan_19 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ hash_join(t1, t2 partition(p0)) */ * from t t1 join t t2 on t1.a = t2.a",
        "Plan": [
          "HashJoin_15 37500.00 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─PartitionUnion_30(Build) 30000.00 root  ",
          "│ ├─BlockReader_34 10000.00 root  data:BlockFullScan_33",
          "│ │ └─BlockFullScan_33 10000.00 INTERLOCK[tiflash] block:t2, partition:p0 keep order:false, stats:pseudo",
          "│ ├─BlockReader_38 10000.00 root  data:BlockFullScan_37",
          "│ │ └─BlockFullScan_37 10000.00 INTERLOCK[tiflash] block:t2, partition:p1 keep order:false, stats:pseudo",
          "│ └─BlockReader_42 10000.00 root  data:BlockFullScan_41",
          "│   └─BlockFullScan_41 10000.00 INTERLOCK[tiflash] block:t2, partition:p2 keep order:false, stats:pseudo",
          "└─PartitionUnion_17(Probe) 30000.00 root  ",
          "  ├─BlockReader_21 10000.00 root  data:BlockFullScan_20",
          "  │ └─BlockFullScan_20 10000.00 INTERLOCK[tiflash] block:t1, partition:p0 keep order:false, stats:pseudo",
          "  ├─BlockReader_25 10000.00 root  data:BlockFullScan_24",
          "  │ └─BlockFullScan_24 10000.00 INTERLOCK[tiflash] block:t1, partition:p1 keep order:false, stats:pseudo",
          "  └─BlockReader_29 10000.00 root  data:BlockFullScan_28",
          "    └─BlockFullScan_28 10000.00 INTERLOCK[tiflash] block:t1, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": [
          "Warning 1105 Optimizer Hint /*+ HASH_JOIN(t1, t2 PARTITION(p0)) */ is inapplicable on specified partitions"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index_merge(t partition(p0)) */ * from t where t.b = 1 or t.c = \"8\"",
        "Plan": [
          "PartitionUnion_9 59.97 root  ",
          "├─IndexMerge_13 20.00 root  ",
          "│ ├─IndexRangeScan_10(Build) 10.00 INTERLOCK[einsteindb] block:t, partition:p0, index:b(b) range:[1,1], keep order:false, stats:pseudo",
          "│ ├─IndexRangeScan_11(Build) 10.00 INTERLOCK[einsteindb] block:t, partition:p0, index:c(c) range:[\"8\",\"8\"], keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_12(Probe) 20.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "├─BlockReader_19 19.99 root  data:Selection_18",
          "│ └─Selection_18 19.99 INTERLOCK[tiflash]  or(eq(test.t.b, 1), eq(test.t.c, \"8\"))",
          "│   └─BlockFullScan_17 10000.00 INTERLOCK[tiflash] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_25 19.99 root  data:Selection_24",
          "  └─Selection_24 19.99 INTERLOCK[tiflash]  or(eq(test.t.b, 1), eq(test.t.c, \"8\"))",
          "    └─BlockFullScan_23 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index_merge(t partition(p0, p1) primary, b) */ * from t where t.a = 1 or t.b = 2",
        "Plan": [
          "PartitionUnion_9 33.00 root  ",
          "├─IndexMerge_13 11.00 root  ",
          "│ ├─BlockRangeScan_10(Build) 1.00 INTERLOCK[einsteindb] block:t, partition:p0 range:[1,1], keep order:false, stats:pseudo",
          "│ ├─IndexRangeScan_11(Build) 10.00 INTERLOCK[einsteindb] block:t, partition:p0, index:b(b) range:[2,2], keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_12(Probe) 11.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "├─IndexMerge_17 11.00 root  ",
          "│ ├─BlockRangeScan_14(Build) 1.00 INTERLOCK[einsteindb] block:t, partition:p1 range:[1,1], keep order:false, stats:pseudo",
          "│ ├─IndexRangeScan_15(Build) 10.00 INTERLOCK[einsteindb] block:t, partition:p1, index:b(b) range:[2,2], keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_16(Probe) 11.00 INTERLOCK[einsteindb] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_23 11.00 root  data:Selection_22",
          "  └─Selection_22 11.00 INTERLOCK[tiflash]  or(eq(test.t.a, 1), eq(test.t.b, 2))",
          "    └─BlockFullScan_21 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(t partition(p0) b) */ * from t partition(p0, p1)",
        "Plan": [
          "PartitionUnion_7 20000.00 root  ",
          "├─IndexLookUp_10 10000.00 root  ",
          "│ ├─IndexFullScan_8(Build) 10000.00 INTERLOCK[einsteindb] block:t, partition:p0, index:b(b) keep order:false, stats:pseudo",
          "│ └─BlockRowIDScan_9(Probe) 10000.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "└─BlockReader_14 10000.00 root  data:BlockFullScan_13",
          "  └─BlockFullScan_13 10000.00 INTERLOCK[tiflash] block:t, partition:p1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ read_from_storage(einsteindb[t partition(p0)], tiflash[t partition(p1, p2)]) */ * from t",
        "Plan": [
          "PartitionUnion_8 30000.00 root  ",
          "├─BlockReader_10 10000.00 root  data:BlockFullScan_9",
          "│ └─BlockFullScan_9 10000.00 INTERLOCK[einsteindb] block:t, partition:p0 keep order:false, stats:pseudo",
          "├─BlockReader_12 10000.00 root  data:BlockFullScan_11",
          "│ └─BlockFullScan_11 10000.00 INTERLOCK[tiflash] block:t, partition:p1 keep order:false, stats:pseudo",
          "└─BlockReader_14 10000.00 root  data:BlockFullScan_13",
          "  └─BlockFullScan_13 10000.00 INTERLOCK[tiflash] block:t, partition:p2 keep order:false, stats:pseudo"
        ],
        "Warn": null
      }
    ]
  },
  {
    "Name": "TestAccessPathOnClusterIndex",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select * from t1",
        "Plan": [
          "BlockReader_5 3.00 root  data:BlockFullScan_4",
          "└─BlockFullScan_4 3.00 INTERLOCK[einsteindb] block:t1 keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11",
          "2 222 2.2000000000 12",
          "3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t1 where t1.a >= 1 and t1.a < 4",
        "Plan": [
          "BlockReader_6 3.00 root  data:BlockRangeScan_5",
          "└─BlockRangeScan_5 3.00 INTERLOCK[einsteindb] block:t1 range:[1,4), keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11",
          "2 222 2.2000000000 12",
          "3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t1 where t1.a = 1 and t1.b < \"333\"",
        "Plan": [
          "BlockReader_6 0.67 root  data:BlockRangeScan_5",
          "└─BlockRangeScan_5 0.67 INTERLOCK[einsteindb] block:t1 range:[1 -inf,1 \"333\"), keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select t1.a, t1.b, t1.c from t1 where t1.c = 3.3",
        "Plan": [
          "IndexReader_6 1.00 root  index:IndexRangeScan_5",
          "└─IndexRangeScan_5 1.00 INTERLOCK[einsteindb] block:t1, index:c(c) range:[3.3000000000,3.3000000000], keep order:false"
        ],
        "Res": [
          "3 333 3.3000000000"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select t1.b, t1.c from t1 where t1.c = 2.2",
        "Plan": [
          "Projection_4 1.00 root  test.t1.b, test.t1.c",
          "└─IndexReader_6 1.00 root  index:IndexRangeScan_5",
          "  └─IndexRangeScan_5 1.00 INTERLOCK[einsteindb] block:t1, index:c(c) range:[2.2000000000,2.2000000000], keep order:false"
        ],
        "Res": [
          "222 2.2000000000"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(t1, c) */ * from t1",
        "Plan": [
          "IndexLookUp_6 3.00 root  ",
          "├─IndexFullScan_4(Build) 3.00 INTERLOCK[einsteindb] block:t1, index:c(c) keep order:false",
          "└─BlockRowIDScan_5(Probe) 3.00 INTERLOCK[einsteindb] block:t1 keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11",
          "2 222 2.2000000000 12",
          "3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t1 use index(c) where t1.c in (2.2, 3.3)",
        "Plan": [
          "IndexLookUp_7 2.00 root  ",
          "├─IndexRangeScan_5(Build) 2.00 INTERLOCK[einsteindb] block:t1, index:c(c) range:[2.2000000000,2.2000000000], [3.3000000000,3.3000000000], keep order:false",
          "└─BlockRowIDScan_6(Probe) 2.00 INTERLOCK[einsteindb] block:t1 keep order:false"
        ],
        "Res": [
          "2 222 2.2000000000 12",
          "3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t1 where t1.a = 1 order by b",
        "Plan": [
          "BlockReader_12 1.00 root  data:BlockRangeScan_11",
          "└─BlockRangeScan_11 1.00 INTERLOCK[einsteindb] block:t1 range:[1,1], keep order:true"
        ],
        "Res": [
          "1 111 1.1000000000 11"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from t1 order by a, b limit 1",
        "Plan": [
          "Limit_10 1.00 root  offset:0, count:1",
          "└─BlockReader_20 1.00 root  data:Limit_19",
          "  └─Limit_19 1.00 INTERLOCK[einsteindb]  offset:0, count:1",
          "    └─BlockFullScan_18 1.00 INTERLOCK[einsteindb] block:t1 keep order:true"
        ],
        "Res": [
          "1 111 1.1000000000 11"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index_merge(t1 primary, c) */ * from t1 where t1.a >= 1 or t1.c = 2.2",
        "Plan": [
          "IndexMerge_8 3.00 root  ",
          "├─BlockRangeScan_5(Build) 3.00 INTERLOCK[einsteindb] block:t1 range:[1,+inf], keep order:false",
          "├─IndexRangeScan_6(Build) 1.00 INTERLOCK[einsteindb] block:t1, index:c(c) range:[2.2000000000,2.2000000000], keep order:false",
          "└─BlockRowIDScan_7(Probe) 3.00 INTERLOCK[einsteindb] block:t1 keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11",
          "2 222 2.2000000000 12",
          "3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index_merge(t1 primary, c) */ * from t1 where t1.a = 1 and t1.b = '111' or t1.c = 3.3",
        "Plan": [
          "IndexMerge_8 2.00 root  ",
          "├─BlockRangeScan_5(Build) 1.00 INTERLOCK[einsteindb] block:t1 range:[1 \"111\",1 \"111\"], keep order:false",
          "├─IndexRangeScan_6(Build) 1.00 INTERLOCK[einsteindb] block:t1, index:c(c) range:[3.3000000000,3.3000000000], keep order:false",
          "└─BlockRowIDScan_7(Probe) 2.00 INTERLOCK[einsteindb] block:t1 keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11",
          "3 333 3.3000000000 13"
        ]
      }
    ]
  },
  {
    "Name": "TestIndexJoinOnClusteredIndex",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select /*+ inl_join(t1, t2) */ * from t t1 join t t2 on t1.a = t2.a",
        "Plan": [
          "IndexJoin_11 3.00 root  inner join, inner:BlockReader_8, outer key:test.t.a, inner key:test.t.a",
          "├─BlockReader_26(Build) 3.00 root  data:BlockFullScan_25",
          "│ └─BlockFullScan_25 3.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─BlockReader_8(Probe) 1.00 root  data:BlockRangeScan_7",
          "  └─BlockRangeScan_7 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t.a], keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11 1 111 1.1000000000 11",
          "2 222 2.2000000000 12 2 222 2.2000000000 12",
          "3 333 3.3000000000 13 3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ inl_merge_join(t1, t2) */ * from t t1 join t t2 on t1.a = t2.a",
        "Plan": [
          "IndexMergeJoin_15 3.00 root  inner join, inner:BlockReader_10, outer key:test.t.a, inner key:test.t.a",
          "├─BlockReader_26(Build) 3.00 root  data:BlockFullScan_25",
          "│ └─BlockFullScan_25 3.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─BlockReader_10(Probe) 1.00 root  data:BlockRangeScan_9",
          "  └─BlockRangeScan_9 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t.a], keep order:true"
        ],
        "Res": [
          "1 111 1.1000000000 11 1 111 1.1000000000 11",
          "2 222 2.2000000000 12 2 222 2.2000000000 12",
          "3 333 3.3000000000 13 3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ inl_hash_join(t1, t2) */ * from t t1 join t t2 on t1.a = t2.a",
        "Plan": [
          "IndexHashJoin_13 3.00 root  inner join, inner:BlockReader_8, outer key:test.t.a, inner key:test.t.a",
          "├─BlockReader_26(Build) 3.00 root  data:BlockFullScan_25",
          "│ └─BlockFullScan_25 3.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─BlockReader_8(Probe) 1.00 root  data:BlockRangeScan_7",
          "  └─BlockRangeScan_7 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t.a], keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11 1 111 1.1000000000 11",
          "2 222 2.2000000000 12 2 222 2.2000000000 12",
          "3 333 3.3000000000 13 3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ inl_join(t1, t2) */ * from t t1 join t t2 on t1.a = t2.a and t1.b = t2.b",
        "Plan": [
          "IndexJoin_11 3.00 root  inner join, inner:BlockReader_8, outer key:test.t.a, test.t.b, inner key:test.t.a, test.t.b",
          "├─BlockReader_26(Build) 3.00 root  data:BlockFullScan_25",
          "│ └─BlockFullScan_25 3.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─BlockReader_8(Probe) 1.00 root  data:BlockRangeScan_7",
          "  └─BlockRangeScan_7 1.00 INTERLOCK[einsteindb] block:t2 range: decided by [test.t.a test.t.b], keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11 1 111 1.1000000000 11",
          "2 222 2.2000000000 12 2 222 2.2000000000 12",
          "3 333 3.3000000000 13 3 333 3.3000000000 13"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ inl_join(t1, t2) */ * from t t1 join t t2 on t1.c = t2.c",
        "Plan": [
          "IndexJoin_11 3.00 root  inner join, inner:IndexLookUp_10, outer key:test.t.c, inner key:test.t.c",
          "├─BlockReader_35(Build) 3.00 root  data:Selection_34",
          "│ └─Selection_34 3.00 INTERLOCK[einsteindb]  not(isnull(test.t.c))",
          "│   └─BlockFullScan_33 3.00 INTERLOCK[einsteindb] block:t1 keep order:false",
          "└─IndexLookUp_10(Probe) 1.00 root  ",
          "  ├─Selection_9(Build) 1.00 INTERLOCK[einsteindb]  not(isnull(test.t.c))",
          "  │ └─IndexRangeScan_7 1.00 INTERLOCK[einsteindb] block:t2, index:c(c) range: decided by [eq(test.t.c, test.t.c)], keep order:false",
          "  └─BlockRowIDScan_8(Probe) 1.00 INTERLOCK[einsteindb] block:t2 keep order:false"
        ],
        "Res": [
          "1 111 1.1000000000 11 1 111 1.1000000000 11",
          "2 222 2.2000000000 12 2 222 2.2000000000 12",
          "3 333 3.3000000000 13 3 333 3.3000000000 13"
        ]
      }
    ]
  },
  {
    "Name": "TestPartitionExplain",
    "Cases": [
      {
        "ALLEGROALLEGROSQL": "select * from pt where c > 10",
        "Plan": [
          "BlockReader_7 3333.33 root partition:dual data:Selection_6",
          "└─Selection_6 3333.33 INTERLOCK[einsteindb]  gt(test.pt.c, 10)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from pt where c > 8",
        "Plan": [
          "BlockReader_7 3333.33 root partition:p2 data:Selection_6",
          "└─Selection_6 3333.33 INTERLOCK[einsteindb]  gt(test.pt.c, 8)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from pt where c < 2 or c >= 9",
        "Plan": [
          "BlockReader_7 6656.67 root partition:p0,p2 data:Selection_6",
          "└─Selection_6 6656.67 INTERLOCK[einsteindb]  or(lt(test.pt.c, 2), ge(test.pt.c, 9))",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select c from pt",
        "Plan": [
          "IndexReader_7 10000.00 root partition:all index:IndexFullScan_6",
          "└─IndexFullScan_6 10000.00 INTERLOCK[einsteindb] block:pt, index:i_c(c) keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select c from pt where c > 10",
        "Plan": [
          "IndexReader_6 3333.33 root partition:dual index:IndexRangeScan_5",
          "└─IndexRangeScan_5 3333.33 INTERLOCK[einsteindb] block:pt, index:i_c(c) range:(10,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select c from pt where c > 8",
        "Plan": [
          "IndexReader_6 3333.33 root partition:p2 index:IndexRangeScan_5",
          "└─IndexRangeScan_5 3333.33 INTERLOCK[einsteindb] block:pt, index:i_c(c) range:(8,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select c from pt where c < 2 or c >= 9",
        "Plan": [
          "IndexReader_6 6656.67 root partition:p0,p2 index:IndexRangeScan_5",
          "└─IndexRangeScan_5 6656.67 INTERLOCK[einsteindb] block:pt, index:i_c(c) range:[-inf,2), [9,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(pt, i_id) */ * from pt",
        "Plan": [
          "IndexLookUp_6 10000.00 root partition:all ",
          "├─IndexFullScan_4(Build) 10000.00 INTERLOCK[einsteindb] block:pt, index:i_id(id) keep order:false, stats:pseudo",
          "└─BlockRowIDScan_5(Probe) 10000.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(pt, i_id) */ * from pt where id < 4 and c > 10",
        "Plan": [
          "IndexLookUp_8 1107.78 root partition:dual ",
          "├─IndexRangeScan_5(Build) 3323.33 INTERLOCK[einsteindb] block:pt, index:i_id(id) range:[-inf,4), keep order:false, stats:pseudo",
          "└─Selection_7(Probe) 1107.78 INTERLOCK[einsteindb]  gt(test.pt.c, 10)",
          "  └─BlockRowIDScan_6 3323.33 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(pt, i_id) */ * from pt where id < 10 and c > 8",
        "Plan": [
          "IndexLookUp_8 1107.78 root partition:p2 ",
          "├─IndexRangeScan_5(Build) 3323.33 INTERLOCK[einsteindb] block:pt, index:i_id(id) range:[-inf,10), keep order:false, stats:pseudo",
          "└─Selection_7(Probe) 1107.78 INTERLOCK[einsteindb]  gt(test.pt.c, 8)",
          "  └─BlockRowIDScan_6 3323.33 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(pt, i_id) */ * from pt where id < 10 and c < 2 or c >= 9",
        "Plan": [
          "IndexLookUp_8 5325.33 root partition:p0,p2 ",
          "├─IndexFullScan_5(Build) 10000.00 INTERLOCK[einsteindb] block:pt, index:i_id(id) keep order:false, stats:pseudo",
          "└─Selection_7(Probe) 5325.33 INTERLOCK[einsteindb]  or(and(lt(test.pt.id, 10), lt(test.pt.c, 2)), ge(test.pt.c, 9))",
          "  └─BlockRowIDScan_6 10000.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from pt partition (p0) where c > 8",
        "Plan": [
          "BlockReader_7 3333.33 root partition:dual data:Selection_6",
          "└─Selection_6 3333.33 INTERLOCK[einsteindb]  gt(test.pt.c, 8)",
          "  └─BlockFullScan_5 10000.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select c from pt partition (p0, p2) where c > 8",
        "Plan": [
          "IndexReader_6 3333.33 root partition:p2 index:IndexRangeScan_5",
          "└─IndexRangeScan_5 3333.33 INTERLOCK[einsteindb] block:pt, index:i_c(c) range:(8,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select /*+ use_index(pt, i_id) */ * from pt partition (p1, p2) where c < 3 and id = 5",
        "Plan": [
          "IndexLookUp_8 3.32 root partition:dual ",
          "├─IndexRangeScan_5(Build) 10.00 INTERLOCK[einsteindb] block:pt, index:i_id(id) range:[5,5], keep order:false, stats:pseudo",
          "└─Selection_7(Probe) 3.32 INTERLOCK[einsteindb]  lt(test.pt.c, 3)",
          "  └─BlockRowIDScan_6 10.00 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from pt where id = 4 or c < 7",
        "Plan": [
          "Projection_4 3330.01 root  test.pt.id, test.pt.c",
          "└─IndexMerge_11 3333.33 root partition:all ",
          "  ├─IndexRangeScan_8(Build) 10.00 INTERLOCK[einsteindb] block:pt, index:i_id(id) range:[4,4], keep order:false, stats:pseudo",
          "  ├─IndexRangeScan_9(Build) 3323.33 INTERLOCK[einsteindb] block:pt, index:i_c(c) range:[-inf,7), keep order:false, stats:pseudo",
          "  └─BlockRowIDScan_10(Probe) 3333.33 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      },
      {
        "ALLEGROALLEGROSQL": "select * from pt where id > 4 or c = 7",
        "Plan": [
          "Projection_4 3340.00 root  test.pt.id, test.pt.c",
          "└─IndexMerge_11 3343.33 root partition:all ",
          "  ├─IndexRangeScan_8(Build) 3333.33 INTERLOCK[einsteindb] block:pt, index:i_id(id) range:(4,+inf], keep order:false, stats:pseudo",
          "  ├─IndexRangeScan_9(Build) 10.00 INTERLOCK[einsteindb] block:pt, index:i_c(c) range:[7,7], keep order:false, stats:pseudo",
          "  └─BlockRowIDScan_10(Probe) 3343.33 INTERLOCK[einsteindb] block:pt keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
