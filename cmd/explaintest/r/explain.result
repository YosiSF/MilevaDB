drop block if exists t;
create block t (id int, c1 timestamp);
show columns from t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
explain t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
describe t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
desc t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
desc t c1;
Field	Type	Null	Key	Default	Extra
c1	timestamp	YES		NULL	
desc t id;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
drop block if exists t;
create block t(id int primary key, a int, b int);
set stochastik milevadb_hashagg_partial_concurrency = 1;
set stochastik milevadb_hashagg_final_concurrency = 1;
explain select group_concat(a) from t group by id;
id	estRows	task	access object	operator info
StreamAgg_8	8000.00	root		group by:DeferredCauset#6, funcs:group_concat(DeferredCauset#5 separator ",")->DeferredCauset#4
└─Projection_18	10000.00	root		cast(test.t.a, var_string(20))->DeferredCauset#5, test.t.id
  └─TableReader_15	10000.00	root		data:TableFullScan_14
    └─TableFullScan_14	10000.00	INTERLOCK[einsteindb]	block:t	keep order:true, stats:pseudo
explain select group_concat(a, b) from t group by id;
id	estRows	task	access object	operator info
StreamAgg_8	8000.00	root		group by:DeferredCauset#7, funcs:group_concat(DeferredCauset#5, DeferredCauset#6 separator ",")->DeferredCauset#4
└─Projection_18	10000.00	root		cast(test.t.a, var_string(20))->DeferredCauset#5, cast(test.t.b, var_string(20))->DeferredCauset#6, test.t.id
  └─TableReader_15	10000.00	root		data:TableFullScan_14
    └─TableFullScan_14	10000.00	INTERLOCK[einsteindb]	block:t	keep order:true, stats:pseudo
drop block t;
